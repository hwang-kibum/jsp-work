#!/bin/bash

########################################
########  MariaDB 10.3.x 취약점 #########
########################################
source 00.util_Install_latest


#DB취약점
#데이터베이스의 주요 설정파일, 패스워드 파일 등과 같은 주요 파일들의 접근 권한이 적절하게 설정#
chmod 640 /etc/my.cnf

:<<END
#1. 명령어 history 비활성화.
echo "export MYSQL_HISTFILE=/dev/null" >> /etc/profile 
source /etc/profile 

HISTORY=$(find /home -name ".mysql_history")
for H in ${HISTORY[@]};
do
    echo ${HI}
    rm -rf ${HI}
done
find /root -name ".mysql_history"
#2. datadir 권한
chown mysql:mysql -R ${DATA}/mariadb
chmod 750 ${DATA}/mariadb/mariadbData/

DIR=$(ls -l ${DATA}/mariadb/mariadbData | grep "^d" | awk '{print $9}')

for I in ${DIR[@]};
do
        chmod 750 ${I}
done

for J in ${DIR[@]};
do
        echo "search Directory : ${J}"
        ls -l | grep "${J}"
done
# DB 파일 권한 설정.
FILE=$(ls -l ${DATA}/mariadb/mariadbData | grep "^-" | awk '{print $9}')

for I in ${FILE[@]};
do
        chmod 650 ${I}
done

for J in ${FILE[@]};
do
        echo "search FILE : ${J}"
        ls  -l | grep "${J}"
done
DB_NAME=$(awk '{print $3}' /INSTALL/01.SELINUX/script_Rocky8_1.7.0/07.add.sql | head -n 1 | tr -d "\`")

#DB 내부 파일 권한 설정.
cd ${DATA}/mariadb/mariadbData/${DB_NAME}; chmod 640 *





#3. log_bin_basename에 적합한 권한이 부여되었는지 확인.
mkdir ${DATA}/mariadb/logs
chown mysql:mysql ${DATA}/mariadb/logs
END

: <<END
#4. log_error에 적합한 권한이 부여되었는지 확인.
chmod 600 ${DATA}/mariadb/logs/error.err
#5. relay_log_basename 파일에 적합한 궣나이 부여되어 있는지 확인
 # X (Standard-alone)
#6. 플러그인 디렉토리에 적합한 권한이 부여되었는지 확인.
chmod 550 ${DATA}/mariadb/lib/plugin
#7. Server_audit 설치.
echo "plugin-load=server_audit=server_audit.so
server_audit_excl_users=NULL  
server_audit_events=CONNECT,QUERY,TABLE,QUERY_DDL,QUERY_DML,QUERY_DML_NO_SELECT,QUERY_DCL
server_audit_file_path=/data/mariadb/mariadbData/logs/audit.log
server_audit_file_rotate_size=1G
server_audit_logging=ON
server_audit_file_rotations=6
server_audit_excl_users=NULL
server_audit_incl_users=NULL
server_audit_syslog_priority=LOG_DEBUG #불필요한 IO증가 될수있음. Default LOG_INFO
server_audit=FORCE_PLUS_PERMANENT" >> /etc/my.cnf
#8. sql_mode에 STRICT_ALL_TABLES에 포함되었는지 확인.
echo "" >> /etc/my.cnf
echo 'sql_mode = "STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,STRICT_ALL_TABLES"' >> /etc/my.cnf 

#9. log-raw가 OFF로 설정되었는지 확인.
echo "" >> /etc/my.cnf
echo "log-raw=OFF" >> /etc/my.cnf 
echo "load_infile=0" >> /etc/my.cnf 
#10. audit_log_connection_policy
#11. audit_log_exclude_accounts
#12. audit_log_include_accounts가 NULL로 설정되었는지 확인.
#13. audit_log_policy가 로그인과 연결을 로그에 남기도록 설정되었는지 확인.
#14. audit_log_statement_policy
#15. 감사플러그인을 제거할수 없도록 확인
 # 7.에서 다 해소됨.

#16. audit_log_strategy를 synchronous | semisyncronous로 설정.
 # X

#17. default_authentication_plugin이 안전한 옵션으로 설정되었는지 확인.
 # X

#18. 글로벌 설정에 비밀번호가 저장되지 않도록 확인.
 # X

#19. 모든Mysql계정에 비밀번호가 설정되었는지 확인.

#20. 연간 비밀번호 변경을 의무화하기 위해 'default_password_lifetime'를 설정함.
 # X

#21. 비밀번호 복잡성 규정있는 지 확인.
echo "" >> /etc/my.cnf 
echo "plugin_load_add = simple_password_check
simple_password_check=FORCE_PLUS_PERMANENT
simple_password_check_digits=1
simple_password_check_letters_same_case=1
simple_password_check_minimal_length=9
simple_password_check_other_characters=1" >> /etc/my.cnf 
#22. 익명의 계정 존재 유무 확인.

#DB Log 권한 설정 600
chmod 600 ${DATA}/mariadb/logs/*
END
 
